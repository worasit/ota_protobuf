// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package com.nongped.protobuf.common.Commons



sealed trait RateType extends _root_.com.trueaccord.scalapb.GeneratedEnum {
  type EnumType = RateType
  def isNetExc: Boolean = false
  def isNetInc: Boolean = false
  def isSellExc: Boolean = false
  def isSellInc: Boolean = false
  def companion: _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[RateType] = com.nongped.protobuf.common.Commons.RateType
}

object RateType extends _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[RateType] {
  implicit def enumCompanion: _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[RateType] = this
  @SerialVersionUID(0L)
  case object NetExc extends RateType {
    val value = 0
    val index = 0
    val name = "NetExc"
    override def isNetExc: Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object NetInc extends RateType {
    val value = 1
    val index = 1
    val name = "NetInc"
    override def isNetInc: Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object SellExc extends RateType {
    val value = 2
    val index = 2
    val name = "SellExc"
    override def isSellExc: Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object SellInc extends RateType {
    val value = 3
    val index = 3
    val name = "SellInc"
    override def isSellInc: Boolean = true
  }
  
  @SerialVersionUID(0L)
  case class Unrecognized(value: Int) extends RateType with _root_.com.trueaccord.scalapb.UnrecognizedEnum
  
  lazy val values = scala.collection.Seq(NetExc, NetInc, SellExc, SellInc)
  def fromValue(value: Int): RateType = value match {
    case 0 => NetExc
    case 1 => NetInc
    case 2 => SellExc
    case 3 => SellInc
    case __other => Unrecognized(__other)
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.EnumDescriptor = CommonsProto.javaDescriptor.getEnumTypes.get(3)
  def scalaDescriptor: _root_.scalapb.descriptors.EnumDescriptor = CommonsProto.scalaDescriptor.enums(3)
}